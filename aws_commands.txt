AWS
------------------------
# Connect to ubuntu EC2 instance 
ssh -i "new_ssh.pem" ubuntu@ec2-3-135-190-123.us-east-2.compute.amazonaws.com

# Copying scraper.py to ubuntu EC2 instance
scp -i "new_ssh.pem" "scraper.py" ubuntu@ec2-3-135-190-123.us-east-2.compute.amazonaws.com:/home/ubuntu/


ENV
--------------------------
create venv: python3 -m venv my_app/env
activate venv : source ~/my_app/env/bin/activate


CRONTAB
--------------------------
MAILTO="" ---> insert at begining of crontab
/home/ubuntu/my_app/env/bin/python /home/ubuntu/scraper.py 2>&1 | logger -t mycmd  ----> insert at last line of crontab / runs env python
#########################
grep 'mycmd' /var/log/syslog ---> shows output text of crontab
sudo systemctl status cron  ----> shows crontab status


*****************************
packages di: /usr/lib/python3/dist-packages
python dir: /usr/bin/python3.10   ---> run 'python3.10 scraper.py' to avoid boto3 error. boto3 installs on python3.10 instead of python3
					    ---> or create env and install boto3 into env

*****************************
gunicorn service:
sudo nano /etc/systemd/system/flasktest.service
--------
[Unit]
Description=Gunicorn instance for a simple hello world app
After=network.target
[Service]
User=ubuntu
Group=www-data
WorkingDirectory=/home/ubuntu/
ExecStart=/home/ubuntu/my_app/env/bin/gunicorn -b localhost:5000 app:app
Restart=always
[Install]
WantedBy=multi-user.target
--------

sudo systemctl daemon-reload
sudo systemctl start flasktest.service
sudo systemctl enable flasktest.service

***************************
nginx:
sudo systemctl start nginx
sudo systemctl enable nginx
--------
sudo nano /etc/nginx/sites-available/default
--------
upstream flaskhelloworld {
    server 127.0.0.1:8000;
}
-------
location / {
    proxy_pass http://flaskhelloworld;  -----> add only this line, delete previous existing line of code
}

sudo systemctl restart nginx